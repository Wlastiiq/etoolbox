{"version":3,"sources":["../node_modules/@material-ui/core/esm/TextField/TextField.js","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","../node_modules/copy-to-clipboard/index.js","../node_modules/@material-ui/icons/AssignmentTurnedIn.js","../node_modules/toggle-selection/index.js","../node_modules/@material-ui/core/esm/Button/Button.js"],"names":["variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","TextField","React","props","ref","autoComplete","_props$autoFocus","autoFocus","children","classes","className","_props$color","color","defaultValue","_props$disabled","disabled","_props$error","error","FormHelperTextProps","_props$fullWidth","fullWidth","helperText","hiddenLabel","id","InputLabelProps","inputProps","InputProps","inputRef","label","_props$multiline","multiline","name","onBlur","onChange","onFocus","placeholder","_props$required","required","rows","rowsMax","_props$select","select","SelectProps","type","value","_props$variant","variant","other","_objectWithoutProperties","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","native","undefined","helperTextId","concat","inputLabelId","InputComponent","InputElement","_extends","FormControl","clsx","root","InputLabel","htmlFor","Select","labelId","input","FormHelperText","withStyles","_props$component","component","Component","focused","margin","muiFormControl","useFormControl","fcs","formControlState","states","contained","marginDense","dangerouslySetInnerHTML","__html","theme","palette","text","secondary","typography","caption","textAlign","marginTop","main","marginLeft","marginRight","deselectCurrent","require","clipboardToIE11Formatting","module","exports","options","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","e","stopPropagation","format","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","default","_default","d","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","forEach","focus","Button","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$size","size","startIconProp","startIcon","_props$type","capitalize","ButtonBase","colorInherit","focusRipple","focusVisible","button","boxSizing","minWidth","padding","borderRadius","shape","primary","transition","transitions","create","duration","short","textDecoration","backgroundColor","fade","action","hoverOpacity","width","display","alignItems","justifyContent","textPrimary","textSecondary","border","disabledBackground","outlinedPrimary","outlinedSecondary","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","iconSizeSmall","iconSizeMedium","iconSizeLarge"],"mappings":"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","file":"static/js/1.5caafbe3.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm-2 14l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z\"\n}), 'AssignmentTurnedIn');\n\nexports.default = _default;","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);"],"sourceRoot":""}