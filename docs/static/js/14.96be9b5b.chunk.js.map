{"version":3,"sources":["../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","components/About/AppDetail.tsx","components/About/About.tsx","../node_modules/@material-ui/core/esm/Link/Link.js"],"names":["CardActionArea","React","props","ref","children","classes","className","focusVisibleClassName","other","_objectWithoutProperties","ButtonBase","_extends","clsx","root","focusVisible","focusHighlight","withStyles","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","name","MEDIA_COMPONENTS","CardMedia","_props$component","component","Component","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","undefined","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","StyledTableCell","head","common","black","color","white","body","fontSize","TableCell","StyledTableRow","hover","TableRow","AppDetail","setToasterState","useToasterUpdate","TableContainer","Paper","Table","aria-label","TableBody","scope","align","Link","href","process","title","getBuildUTCTimestamp","onClick","message","open","type","getBuildUTCDate","useStyles","makeStyles","marginTop","rootCard","height","margin","spacing","appDescription","marginBottom","openSource","About","Grid","container","justifyContent","Card","Banner","CardContent","Typography","variant","_props$color","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","setFocusVisible","handlerRef","useForkRef","capitalize","button","event","underlineNone","textDecoration","underlineHover","underlineAlways","WebkitTapHighlightColor","outline","border","padding","cursor","userSelect","verticalAlign","borderStyle"],"mappings":"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","file":"static/js/14.96be9b5b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\r\n   * Image to be displayed as a background image.\r\n   * Either `image` or `src` prop must be specified.\r\n   * Note that caller must specify height otherwise the image will not be visible.\r\n   */\n  image: PropTypes.string,\n\n  /**\r\n   * An alias for `image` property.\r\n   * Available only with media components.\r\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\r\n   */\n  src: PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport GithubIcon from '@material-ui/icons/GitHub';\n\nimport { useToasterUpdate } from '../Toaster/ToasterProvider';\nimport { getBuildUTCDate, getBuildUTCTimestamp } from '../../services/utils';\nimport { Link } from '@material-ui/core';\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\nexport default function AppDetail() {\n    const { setToasterState } = useToasterUpdate();\n\n    function onBuildDateClick() {\n        const message = `Build UTC timestamp: [${getBuildUTCTimestamp()}]`;\n        setToasterState({ open: true, message, type: 'info' });\n    }\n\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label='about this application'>\n                <TableBody>\n                    <StyledTableRow key='github'>\n                        <StyledTableCell component='th' scope='row'>\n                            <GithubIcon />\n                        </StyledTableCell>\n                        <StyledTableCell align='right'>\n                            <Link href='https://github.com/amwebexpert/etoolbox'>GitHub project</Link>\n                        </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow key='versionNumber'>\n                        <StyledTableCell component='th' scope='row'>\n                            Version\n                        </StyledTableCell>\n                        <StyledTableCell align='right'>{process.env.REACT_APP_VERSION}</StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow key='versionDate'>\n                        <StyledTableCell component='th' scope='row'>\n                            Updated\n                        </StyledTableCell>\n                        <StyledTableCell align='right' title={getBuildUTCTimestamp()} onClick={onBuildDateClick}>\n                            {getBuildUTCDate()}\n                        </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow key='author'>\n                        <StyledTableCell component='th' scope='row'>\n                            Author\n                        </StyledTableCell>\n                        <StyledTableCell align='right'>\n                            <Link href='mailto:amwebexpert@gmail.com'>amwebexpert@gmail.com</Link>\n                        </StyledTableCell>\n                    </StyledTableRow>\n                    <StyledTableRow key='iconMadeBy'>\n                        <StyledTableCell component='th' scope='row'>\n                            Icon credits\n                        </StyledTableCell>\n                        <StyledTableCell align='right'>\n                            <Link href='https://therealjerrylow.com/'>Jerry Low</Link>\n                        </StyledTableCell>\n                    </StyledTableRow>\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport AppDetail from './AppDetail';\nimport Banner from '../../images/icon.png';\nimport { Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 10,\n  },\n  rootCard: {\n    textAlign: 'center',\n  },\n  media: {\n    height: 240,\n    margin: theme.spacing(3),\n  },\n  appDescription: {\n    marginBottom: theme.spacing(4),\n  },\n  openSource: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport default function About() {\n  const classes = useStyles();\n\n  return (\n    <Grid container justifyContent=\"center\" className={classes.root}>\n      <Card className={classes.rootCard}>\n        <CardActionArea>\n          <CardMedia className={classes.media} image={Banner} title=\"Web Toolbox\" />\n          <CardContent>\n            <Typography variant=\"h5\">\n              Web Toolbox\n            </Typography>\n\n            <Typography variant=\"subtitle2\" className={classes.appDescription}>\n              Collection of web developer utilities\n            </Typography>\n\n            <AppDetail />\n\n            <Typography variant=\"subtitle2\" className={classes.openSource}>\n              Open source app powered by <Link href=\"https://reactjs.org/docs/create-a-new-react-app.html\">Create React App</Link>\n            </Typography>\n\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Grid>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\r\n   * The content of the link.\r\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The color of the link.\r\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\r\n   * @ignore\r\n   */\n  onBlur: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onFocus: PropTypes.func,\n\n  /**\r\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\r\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\r\n   * Controls when the link should have an underline.\r\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\r\n   * Applies the theme typography styles.\r\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);"],"sourceRoot":""}