{"version":3,"sources":["containers/URLParser/styles.ts","containers/URLParser/index.tsx","containers/URLParser/services.ts","containers/URLEncoder/services.ts","containers/URLEncoder/index.tsx","components/FeaturesGroup/index.tsx","components/FeatureTitle/index.tsx","components/CopyButton/index.tsx","../node_modules/@material-ui/icons/LinkOff.js"],"names":["StyledTableCell","withStyles","theme","body","fontSize","spacing","whiteSpace","wordBreak","TableCell","StyledTableRow","root","backgroundColor","palette","action","hover","TableRow","useStyles","makeStyles","margin","panel","marginBottom","tableHeader","primary","main","connect","state","inputText","textInputs","dispatch","storeInputText","name","value","setTextAction","withWidth","props","title","classes","React","useState","Map","urlFragments","setUrlFragments","urlParams","setUrlParams","useEffect","fragments","url","URL","set","host","protocol","hash","origin","pathname","port","search","e","services","params","searchParams","forEach","key","Helmet","className","FeatureTitle","iconType","LinkIcon","TextField","autoFocus","isWidthUp","width","label","placeholder","multiline","rows","variant","fullWidth","onChange","target","TableContainer","component","Paper","Table","TableHead","TableBody","keys","sort","map","scope","get","transform","encoded","decodeURIComponent","encodeURIComponent","formatted","padding","borderColor","text","disabled","borderStyle","borderWidth","borderRadius","shape","toolbar","marginLeft","transformed","setTransformed","LinkOffIcon","Toolbar","Box","display","flexGrow","CopyButton","data","Button","color","endIcon","onClick","link","textDecoration","linkActive","info","dark","grey","linkMenu","TABS","FeaturesGroup","setValue","useRouteMatch","path","location","useLocation","tabIndex","square","Tabs","indicatorColor","textColor","scrollButtons","_e","newValue","Tab","to","Link","exact","titleWithIcon","alignItems","titleContainer","justifyContent","icon","height","marginRight","FeatureIcon","setToasterState","useToasterUpdate","feedback","substr","message","copy","format","open","type","autoHideDuration","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d"],"mappings":"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","file":"static/js/22.c1ed13d4.chunk.js","sourcesContent":["import { makeStyles, TableCell, TableRow, withStyles } from \"@material-ui/core\";\n\nexport const StyledTableCell = withStyles((theme) => ({\n    body: {\n        fontSize: theme.spacing(1.75),\n        whiteSpace: 'normal',\n        wordBreak: 'break-word',\n    },\n}))(TableCell);\n\nexport const StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(even)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    panel: {\n        marginBottom: theme.spacing(3),\n    },\n    tableHeader: {\n        backgroundColor: theme.palette.primary.main,\n    }\n}));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { setTextAction } from '../../actions/text-actions';\nimport { AppState } from '../../reducers';\nimport * as services from './services';\nimport FeatureTitle from '../../components/FeatureTitle';\nimport { StyledTableCell, StyledTableRow, useStyles } from './styles';\nimport { Helmet } from 'react-helmet';\n\ninterface Props {\n    inputText?: string;\n    storeInputText: (name: string, value: string) => void;\n    width: Breakpoint;\n}\n\nconst URLParser: React.FC<Props> = (props: Props) => {\n    const title = 'URL Parser';\n    const classes = useStyles();\n    const { inputText, storeInputText } = props;\n    const [urlFragments, setUrlFragments] = React.useState(new Map());\n    const [urlParams, setUrlParams] = React.useState(new Map());\n\n    React.useEffect(() => {\n        setUrlFragments(services.parseUrl(inputText));\n        setUrlParams(services.parseUrlParams(inputText));\n    }, [inputText]);\n\n    return (\n        <>\n            <Helmet title={title} />\n            <div className={classes.root}>\n                <FeatureTitle iconType={LinkIcon} title={title} />\n\n                <TextField\n                    autoFocus={isWidthUp('md', props.width)}\n                    label=\"URL\"\n                    placeholder=\"Paste or type the url here\"\n                    multiline\n                    rows={4}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth={true}\n                    value={inputText}\n                    className={classes.panel}\n                    onChange={(e) => storeInputText('lastUrlParserValue', e.target.value)}\n                />\n\n                <TableContainer component={Paper} className={classes.panel}>\n                    <Table>\n                        <TableHead className={classes.tableHeader}>\n                            <TableRow>\n                                <StyledTableCell>Fragment</StyledTableCell>\n                                <StyledTableCell>Value</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {[...urlFragments.keys()].sort().map(key => (\n                                <StyledTableRow key={key}>\n                                    <StyledTableCell component=\"th\" scope=\"row\">{key}</StyledTableCell>\n                                    <StyledTableCell>{urlFragments.get(key)}</StyledTableCell>\n                                </StyledTableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead className={classes.tableHeader}>\n                            <TableRow>\n                                <StyledTableCell>Parameter</StyledTableCell>\n                                <StyledTableCell>Value</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {[...urlParams.keys()].sort().map(key => (\n                                <StyledTableRow key={key}>\n                                    <StyledTableCell component=\"th\" scope=\"row\">{key}</StyledTableCell>\n                                    <StyledTableCell>{urlParams.get(key)}</StyledTableCell>\n                                </StyledTableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </>\n    );\n}\n\nexport function mapStateToProps(state: AppState) {\n    return {\n        inputText: state.textInputs['lastUrlParserValue'],\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        storeInputText: (name: string, value: string) => dispatch(setTextAction(name, value)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(URLParser));\n","export function parseUrl(value?: string): Map<string, string> {\n    const fragments: Map<string, string> = new Map();\n\n    if (!value) {\n        return fragments;\n    }\n\n    try {\n        const url = new URL(value);\n\n        fragments.set('host', url.host);\n        fragments.set('protocol', url.protocol);\n        fragments.set('hash', url.hash);\n        fragments.set('origin', url.origin);\n        fragments.set('pathname', url.pathname);\n        fragments.set('port', url.port ? url.port : '<default>');\n        fragments.set('search', url.search);\n    } catch (e) {\n        //  do nothing user may still be typing...\n    }\n\n    return fragments;\n}\n\nexport function parseUrlParams(value?: string): Map<string, string> {\n    const params: Map<string, string> = new Map();\n\n    if (!value) {\n        return params;\n    }\n\n    try {\n        const url = new URL(value);\n        const searchParams: URLSearchParams = url.searchParams;\n        searchParams.forEach((value, key) => params.set(key, value));\n    } catch (e) {\n        //  do nothing user may still be typing...\n    }\n\n    return params;\n}\n","export function transform(value: string | undefined, encoded: boolean): string {\n    if (!value) {\n        return '';\n    }\n\n    if (encoded) {\n        return decodeURIComponent(value);\n    } else {\n        return encodeURIComponent(value);\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { Box, Toolbar } from '@material-ui/core';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinkIcon from '@material-ui/icons/Link';\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\nimport TextField from '@material-ui/core/TextField';\n\nimport { setTextAction } from '../../actions/text-actions';\nimport { AppState } from '../../reducers';\nimport * as services from './services';\nimport FeatureTitle from '../../components/FeatureTitle';\nimport CopyButton from '../../components/CopyButton';\nimport { Helmet } from 'react-helmet';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    formatted: {\n        padding: theme.spacing(1),\n        borderColor: theme.palette.text.disabled,\n        borderStyle: 'solid',\n        borderWidth: 1,\n        borderRadius: theme.shape.borderRadius,\n        whiteSpace: 'normal',\n        wordBreak: 'break-word',\n    },\n    toolbar: {\n        margin: 0,\n        padding: 0,\n        '& > *': {\n            marginLeft: theme.spacing(1),\n        },\n    },\n}));\n\ninterface Props {\n    width: Breakpoint;\n    inputText?: string;\n    storeInputText: (name: string, value: string) => void;\n}\n\nconst URLEncoder: React.FC<Props> = (props: Props) => {\n    const title = 'URL Encoder / decoder';\n    const classes = useStyles();\n    const { inputText, storeInputText } = props;\n    const [transformed, setTransformed] = React.useState(services.transform(inputText, false));\n\n    return (\n        <>\n            <Helmet title={title} />\n            <div className={classes.root}>\n                <FeatureTitle iconType={LinkOffIcon} title={title} />\n\n                <TextField\n                    autoFocus={isWidthUp('md', props.width)}\n                    label=\"Content to encode/decode\"\n                    placeholder=\"Paste or type the content here\"\n                    multiline\n                    rows={4}\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    fullWidth={true}\n                    value={inputText}\n                    onChange={(e) => storeInputText('lastUrlEncoderValue', e.target.value)}\n                />\n\n                <Toolbar className={classes.toolbar}>\n                    <Box display='flex' flexGrow={1}></Box>\n                    <CopyButton data={transformed} />\n                    <Button variant=\"contained\" color=\"primary\" endIcon={<LinkIcon>Encode</LinkIcon>} disabled={!inputText}\n                        onClick={() => setTransformed(services.transform(inputText, false))}>Enc.</Button>\n                    <Button variant=\"contained\" color=\"primary\" endIcon={<LinkOffIcon>Decode</LinkOffIcon>} disabled={!inputText}\n                        onClick={() => setTransformed(services.transform(inputText, true))}>Dec.</Button>\n                </Toolbar>\n\n                <div className={classes.formatted}>\n                    {transformed}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport function mapStateToProps(state: AppState) {\n    return {\n        inputText: state.textInputs['lastUrlEncoderValue']\n    }\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        storeInputText: (name: string, value: string) => dispatch(setTextAction(name, value)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(URLEncoder));\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Tab, Tabs } from '@material-ui/core';\n\nimport { Link, Redirect, Route, Switch, useLocation, useRouteMatch } from 'react-router-dom';\nimport URLParser from '../../containers/URLParser';\nimport URLEncoder from '../../containers/URLEncoder';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: 0,\n    },\n    link: {\n        textDecoration: 'none',\n        color: theme.palette.text.primary,\n    },\n    linkActive: {\n        color: theme.palette.info.dark,\n        '& .MuiListItem-root': {\n            backgroundColor: theme.palette.grey[300],\n        }\n    },\n    linkMenu: {\n        textDecoration: 'none',\n        color: 'inherit',\n    }\n}));\n\n// TODO Make this generic so we can reuse the FeaturesGroup\nconst TABS: Map<String, number> = new Map([\n    ['/URL/URLParser', 0],\n    ['/URL/URLEncoder', 1]]\n);\n\nconst FeaturesGroup: React.FC = () => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const { path, url } = useRouteMatch();\n    const location = useLocation();\n\n    React.useEffect(\n        () => {\n            const tabIndex = TABS.get(location.pathname);\n            if (tabIndex) {\n                setValue(tabIndex!);\n            }\n        },\n        [location, setValue]\n    );\n\n    return (\n        <>\n            <Paper square className={classes.root}>\n                <Tabs\n                    value={value}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"on\"\n                    onChange={(_e: any, newValue: number) => setValue(newValue)}\n                >\n                    { /** TODO Make this generic so we can reuse the FeaturesGroup */}\n                    <Tab label=\"Parser\" to={`${url}/URLParser`} component={Link} />\n                    <Tab label=\"Encoder\" to={`${url}/URLEncoder`} component={Link} />\n                </Tabs>\n            </Paper>\n\n            <Switch>\n                { /** TODO Make this generic so we can reuse the FeaturesGroup */}\n                <Route exact path={`${path}/URLParser`}><URLParser /></Route>\n                <Route exact path={`${path}/URLEncoder`}><URLEncoder /></Route>\n\n                {/** Default route is the first tab */}\n                <Redirect to={`${path}/URLParser`} />\n            </Switch>\n        </>\n    );\n}\n\nexport default FeaturesGroup;\n","import { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        wordBreak: 'break-word',\n    },\n    titleWithIcon: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    titleContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    icon: {\n        height: '40px',\n        width: '40px',\n        marginRight: theme.spacing(1),\n    },\n}));\n\ninterface Props {\n    title: string;\n    iconType: any;\n}\n\nconst FeatureTitle: React.FC<Props> = (props: Props) => {\n    const classes = useStyles();\n    const FeatureIcon = props.iconType;\n\n    return (\n        <div className={classes.titleContainer}>\n            <div className={classes.titleWithIcon}>\n                <FeatureIcon className={classes.icon} />\n                <Typography variant=\"h5\" className={classes.title}>\n                    {props.title}\n                </Typography>\n            </div>\n        </div>\n    );\n}\n\nexport default FeatureTitle;\n","import React from 'react';\nimport AssignmentTurnedIn from '@material-ui/icons/AssignmentTurnedIn';\nimport { Button } from '@material-ui/core';\n\nimport * as copy from 'copy-to-clipboard';\nimport { useToasterUpdate } from '../Toaster/ToasterProvider';\n\ninterface Props {\n    data?: string;\n}\n\nconst CopyButton: React.FC<Props> = (props: Props) => {\n    const { data } = props;\n    const { setToasterState } = useToasterUpdate();\n\n    const handleCopy = () => {\n        if (!data) {\n            return;\n        }\n\n        const feedback = data.substr(0, 20);\n        const message = `Content copied into clipboard: ${feedback} …`;\n\n        copy.default(data, { format: 'text/plain' });\n        setToasterState({ open: true, message, type: 'success', autoHideDuration: 2000 });\n    }\n\n    return (\n        <Button endIcon={<AssignmentTurnedIn>Copy</AssignmentTurnedIn>}\n            onClick={handleCopy} disabled={!data}\n            variant=\"contained\" color=\"primary\">Copy</Button>\n    );\n}\n\nexport default CopyButton;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 7h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1 0 1.43-.98 2.63-2.31 2.98l1.46 1.46C20.88 15.61 22 13.95 22 12c0-2.76-2.24-5-5-5zm-1 4h-2.19l2 2H16zM2 4.27l3.11 3.11C3.29 8.12 2 9.91 2 12c0 2.76 2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1 0-1.59 1.21-2.9 2.76-3.07L8.73 11H8v2h2.73L13 15.27V17h1.73l4.01 4L20 19.74 3.27 3 2 4.27z\"\n}), 'LinkOff');\n\nexports.default = _default;"],"sourceRoot":""}